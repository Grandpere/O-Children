# builder
FROM node:alpine as builder

RUN mkdir /src

RUN apk add --no-cache --virtual build-dependencies \
  git \
  openssh

ADD conf/git/repo-key /
RUN \
  chmod 600 /repo-key && \
  echo "IdentityFile /repo-key" >> /etc/ssh/ssh_config && \
  echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config && \
  git clone git@github.com:O-clock-Orion/plateforme-educative-api.git /src

RUN apk del build-dependencies


# php
FROM php:7.2.3-fpm

WORKDIR /var/www/project/

RUN apt-get update || apt-get update && apt-get install -y \
  apt-utils \
  git \
  zip \
  libzip-dev \
  unzip \
  gnupg gnupg1 gnupg2 \
  wget \
  libfreetype6-dev \
  libjpeg62-turbo-dev \
  libpng-dev \
  && docker-php-ext-install -j$(nproc) iconv \
  && docker-php-ext-install -j$(nproc) zip pdo pdo_mysql \
  && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
  && docker-php-ext-install -j$(nproc) gd \
  && docker-php-ext-enable pdo_mysql

RUN apt-get install -y libxrender-dev \
  libfontconfig1 \
  libxext-dev \
  libfontconfig1 \
  libfontconfig1-dev \
  libssl1.0-dev

RUN curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer
COPY --from=builder src/ .

RUN composer install

RUN curl -sL https://deb.nodesource.com/setup_6.x | bash - \
  && apt-get install -y nodejs
RUN npm install -g bower
RUN npm install -g grunt-cli

RUN mkdir -p /usr/local/bin
RUN curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony
RUN chmod a+x /usr/local/bin/symfony

COPY conf/php/php.ini /usr/local/etc/php/php.ini
COPY conf/php/php-fpm-pool.conf /usr/local/etc/php/pool.d/www.conf

EXPOSE 9000

CMD ["php-fpm"]
